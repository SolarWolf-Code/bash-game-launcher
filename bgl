#!/bin/bash

# Initialize the Steam game map
declare -A steam_game_map

# Initialize a string to store game data
game_data=""

# Read Steam game data into steam_game_map
while IFS= read -r line; do
  id=$(echo "$line" | awk '{print $1}')
  name=$(echo "$line" | awk '{$1=""; print $0}' | sed 's/^ //' | sed 's/"/\\"/g')

  # Check if the line contains only the ID and name
  if [[ $id =~ ^[0-9]+$ && ! -z $name ]]; then
    steam_game_map["$name"]="$id"  # Swap ID and name
  fi
done < <(find ~/Games/SteamLibrary/steamapps/ -maxdepth 1 -type f -name '*.acf' -exec awk -F '"' '/"appid|name/{ printf $4 "|" } END { print "" }' {} \; | column -t -s '|' | sort -k 2)

# Add Steam game data to the game_data string
for key in "${!steam_game_map[@]}"; do
  game_data+="$key,steam,${steam_game_map["$key"]}\n"
done

# Find non-Steam games and append them to game_data if not already in the list
while IFS= read -r -d '' desktop_file; do
  name=$(grep -oP '(?<=Name=).*' "$desktop_file" | head -n 1)
  exec=$(grep -oP '(?<=Exec=).*' "$desktop_file" | head -n 1)
  if [[ -n "$name" && -n "$exec" ]]; then
    # Check if the game is not already in game_data (avoid duplicates)
    if ! echo -e "$game_data" | grep -q "^$name,steam" && ! echo -e "$game_data" | grep -q "^$name,"; then
      game_data+="$name,non-steam,$exec\n"
    fi
  fi
done < <(find ~/.local/share/applications/ /usr/share/applications/ -type f -name "*.desktop" -exec grep -q "Categories=.*Game" {} \; -print0)

# Remove the last newline character from game_data
game_data=$(echo -e "$game_data" | sed '$s/\\n$//')

# User selects a game
selected_name=$(echo -e "$game_data" | cut -d',' -f1 | gum filter)

# Function to disable VPN
disable_vpn() {
  echo "Disable VPN and starting: $selected_name"
  sudo systemctl stop openvpn
}

# Function to launch a Steam game
launch_steam_game() {
  game_id="$1"
  echo "Launching $selected_name (ID: $game_id)..." 
  steam "steam://run/$game_id" > /dev/null 2>&1 & 
}

# Function to launch a non-Steam game
launch_non_steam_game() {
  exec_command="$1"
  echo "Launching $selected_name with command: $exec_command" 
  eval "$exec_command" > /dev/null 2>&1 &
}

# Function to extract game type and identifier from game_data
get_game_data() {
  game_name="$1"
  while IFS=, read -r name game_type identifier; do
    if [[ "$name" == "$game_name" ]]; then
      selected_type="$game_type"
      selected_identifier="${identifier//\"/}"
      break
    fi
  done <<< "$game_data"
}

if [[ -n "$selected_name" ]]; then
  # Extract game type and identifier from game_data using selected_name
  get_game_data "$selected_name"

  no_vpn_games=("Realm of the Mad God Exalt" "League of Legends")
  if [[ " ${no_vpn_games[@]} " =~ " $selected_name " ]]; then
    gum confirm "Disable VPN?" && disable_vpn || echo "Keeping VPN on and launching $selected_name"
  fi

  if [[ "$selected_type" == "steam" ]]; then
    # Launch the Steam game
    launch_steam_game "$selected_identifier"
  else
    # It's a non-Steam game
    # Launch the non-Steam game using the exec command
    launch_non_steam_game "$selected_identifier"
  fi
else
  # Handle the case where the user didn't select anything
  echo "No game selected. Exiting."
fi
